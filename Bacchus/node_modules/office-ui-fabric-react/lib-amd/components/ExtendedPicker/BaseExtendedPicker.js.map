{"version":3,"file":"BaseExtendedPicker.js","sourceRoot":"../src/","sources":["components/ExtendedPicker/BaseExtendedPicker.tsx"],"names":[],"mappings":";;;IAkBA,kCAAkC;IAClC,IAAM,MAAM,GAAQ,YAAY,CAAC;IAcjC;QAAkF,8CAA0C;QAY1H,4BAAY,eAAkB;YAA9B,YACE,kBAAM,eAAe,CAAC,SAcvB;YAzBM,oBAAc,GAAG,qBAAS,EAAsD,CAAC;YACjF,uBAAiB,GAAG,qBAAS,EAA4D,CAAC;YAEvF,UAAI,GAAG,qBAAS,EAAkB,CAAC;YACnC,WAAK,GAAG,qBAAS,EAAY,CAAC;YAC9B,eAAS,GAAG,qBAAS,EAAa,CAAC;YAmGnC,uBAAiB,GAAG;gBAC5B,KAAI,CAAC,WAAW,EAAE,CAAC;YACrB,CAAC,CAAA;YA8CS,mBAAa,GAAG,UAAC,KAAa;gBACtC,IAAI,KAAI,CAAC,cAAc,CAAC,OAAO,EAAE;oBAC/B,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;iBACzD;YACH,CAAC,CAAA;YAES,kBAAY,GAAG,UAAC,EAAiD;gBACzE,IAAI,KAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE;oBAClC,KAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;iBAC9C;gBAED,IAAI,KAAI,CAAC,cAAc,CAAC,OAAO,EAAE;oBAC/B,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;iBAC9D;gBAED,IAAI,KAAI,CAAC,KAAK,CAAC,UAAU,IAAI,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE;oBAC1D,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,EAAwC,CAAC,CAAC;iBACzE;YACH,CAAC,CAAA;YAED,+GAA+G;YAC/G,kHAAkH;YACxG,iBAAW,GAAG,UAAC,EAAoC;gBAC3D,IAAI,EAAE,CAAC,KAAK,sBAAuB,EAAE;oBACnC,OAAO;iBACR;gBACD,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,OAAO,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE;oBACnH,IAAI,KAAI,CAAC,iBAAiB,CAAC,OAAO,IAAK,KAAI,CAAC,KAAK,CAAC,OAAoB,CAAC,cAAc,KAAK,CAAC,EAAE;wBAC3F,KAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,YAAY,CAAC,KAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;wBACnE,KAAI,CAAC,uBAAuB,EAAE,CAAC;qBAChC;iBACF;YACH,CAAC,CAAA;YAES,YAAM,GAAG,UAAC,EAAqC;gBACvD,IAAI,KAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE;oBAClC,4CAA4C;oBAC5C,KAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;iBAC3C;YACH,CAAC,CAAA;YAES,aAAO,GAAG,UAAC,EAAqD;gBACxE,IAAI,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE;oBACtB,IAAM,SAAS,GAAG,EAAE,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;oBACnD,EAAE,CAAC,cAAc,EAAE,CAAC;oBACpB,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;iBAC/B;YACH,CAAC,CAAA;YAES,gCAA0B,GAAG,UAAC,EAAoC;gBAC1E,iHAAiH;gBACjH,IAAI,KAAI,CAAC,cAAc,CAAC,OAAO,IAAI,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,kBAAkB,EAAE;oBACjF,QAAQ,EAAE,CAAC,KAAK,EAAE;wBAChB,iBAAiB;wBACjB,mBAAmB;wBACnB;4BACE,OAAO,IAAI,CAAC;qBACf;iBACF;gBAED,IAAI,EAAE,CAAC,OAAO,EAAE;oBACd,OAAO,IAAI,CAAC;iBACb;gBAED,OAAO,KAAK,CAAC;YACf,CAAC,CAAA;YAES,2BAAqB,GAAG,UAAC,IAAO;gBACxC,IAAI,KAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE;oBAClC,KAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;iBACjD;gBAED,IAAI,KAAI,CAAC,KAAK,CAAC,cAAc,EAAE;oBAC7B,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;iBACjC;gBAED,IAAI,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE;oBACtB,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;iBAC5B;gBAED,IAAI,KAAI,CAAC,cAAc,CAAC,OAAO,EAAE;oBAC/B,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;iBAC1C;gBAED,KAAI,CAAC,KAAK,EAAE,CAAC;YACf,CAAC,CAAA;YAES,6BAAuB,GAAG;gBAClC,KAAI,CAAC,KAAK,EAAE,CAAC;YACf,CAAC,CAAA;YApOC,IAAM,KAAK,GAAQ,eAAe,CAAC,aAAa,IAAI,eAAe,CAAC,oBAAoB,IAAI,EAAE,CAAC;YAE/F,KAAI,CAAC,SAAS,GAAG,IAAI,qBAAS,CAAC,EAAE,kBAAkB,EAAE,cAAM,OAAA,KAAI,CAAC,iBAAiB,EAAE,EAAxB,CAAwB,EAAE,CAAC,CAAC;YACvF,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAE/B,KAAI,CAAC,KAAK,GAAG;gBACX,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;gBACzB,qBAAqB,EAAE,EAAE;aAC1B,CAAC;YAEF,KAAI,CAAC,mBAAmB,GAAG,KAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC;YAC1D,KAAI,CAAC,sBAAsB,GAAG,KAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC;;QAClE,CAAC;QAGD,sBAAW,qCAAK;YADhB,kCAAkC;iBAClC;gBACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;YACpF,CAAC;;;WAAA;QAEM,8CAAiB,GAAxB;YACE,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC;QAEM,kCAAK,GAAZ;YACE,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;gBAC1B,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;aAChC;QACH,CAAC;QAEM,uCAAU,GAAjB;YACE,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;gBACtB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;aAC5B;QACH,CAAC;QAED,sBAAW,4CAAY;iBAAvB;gBACE,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC;YAC/D,CAAC;;;WAAA;QAEM,mCAAM,GAAb;YACU,IAAA,wDAAqB,CAAgB;YACvC,IAAA,eAIQ,EAHZ,wBAAS,EACT,0BAAU,EACV,sBAAQ,CACK;YAEf,OAAO,CACL,6BACE,GAAG,EAAG,IAAI,CAAC,IAAI,EACf,SAAS,EAAG,eAAG,CACb,eAAe,EACf,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC;gBAE7B,oBAAC,qBAAS,IACR,YAAY,EAAG,IAAI,CAAC,SAAS,EAC7B,SAAS,EAAG,8BAAkB,CAAC,aAAa,EAC5C,oBAAoB,EAAG,IAAI,CAAC,0BAA0B,EACtD,SAAS,EAAG,IAAI,CAAC,WAAW,EAC5B,MAAM,EAAG,IAAI,CAAC,MAAM;oBAEpB,oBAAC,yBAAa,IAAC,SAAS,EAAG,IAAI,CAAC,SAAS,EAAG,aAAa,EAAG,yBAAa,CAAC,QAAQ;wBAChF,6BAAK,SAAS,EAAG,eAAG,CAAC,oBAAoB,EAAE,MAAM,CAAC,UAAU,CAAC,EAAG,IAAI,EAAG,MAAM;4BACzE,IAAI,CAAC,KAAK,CAAC,eAAe;4BAC1B,IAAI,CAAC,uBAAuB,EAAE;4BAC9B,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,oBAAC,mBAAQ,uBAC3B,UAAyB,IAC9B,SAAS,EAAG,eAAG,CAAC,qBAAqB,EAAE,MAAM,CAAC,WAAW,CAAC,EAC1D,GAAG,EAAG,IAAI,CAAC,KAAK,EAChB,OAAO,EAAG,IAAI,CAAC,YAAY,EAC3B,kBAAkB,EAAG,IAAI,CAAC,aAAa,EACvC,qBAAqB,EAAG,qBAAqB,2BACrB,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,eAC9C,iBAAiB,mBACb,MAAM,mBACN,MAAM,EACpB,cAAc,EAAC,KAAK,EACpB,YAAY,EAAC,KAAK,EAClB,IAAI,EAAC,UAAU,EACf,QAAQ,EAAG,QAAQ,mBACL,2BAA2B,EACzC,OAAO,EAAG,IAAI,CAAC,OAAO,IACtB,CAAC,CACC,CACQ,CACN;gBACV,IAAI,CAAC,iBAAiB,EAAE,CACtB,CACP,CAAC;QACJ,CAAC;QAMS,wCAAW,GAArB;YACU,IAAA,wBAAK,CAAgB;YACrB,IAAA,gCAAS,CAAgB;YACjC,OAAO,SAAS,KAAK,SAAS,IAAI,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC;QAC7D,CAAC;QAES,8CAAiB,GAA3B;YACE,IAAM,sBAAsB,GAAG,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC;YACjE,OAAO,CAAC,sBAAsB,oBAC5B,YAAY,EAAE,IAAI,CAAC,cAAc,EACjC,QAAQ,EAAE,IAAI,CAAC,qBAAqB,EACpC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,EAC9E,aAAa,EAAE,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IACtF,IAAI,CAAC,mBAAmB,EAC3B,CAAC,CAAC;QACN,CAAC;QAES,oDAAuB,GAAjC;YACE,IAAM,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC;YAC/D,OAAO,CAAC,qBAAqB,oBAC3B,YAAY,EAAE,IAAI,CAAC,iBAAiB,IACjC,IAAI,CAAC,sBAAsB,EAC9B,CAAC,CAAC;QACN,CAAC;QAES,uCAAU,GAApB,UAAqB,KAAc;YACzB,IAAA,wBAAK,CAAgB;YAE7B,IAAI,KAAK,CAAC,MAAM,IAAI,KAAM,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACpD,IAAM,KAAK,GAAgB,IAAI,CAAC,IAAI,CAAC,OAAO;qBACzC,gBAAgB,CAAC,wBAAwB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAM,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAgB,CAAC;gBACjG,IAAI,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;oBACnC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;iBAC5C;aACF;iBAAM,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;gBAC7B,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAyB,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACjE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;aACnC;iBAAM;gBACL,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;oBACtB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;iBAC5B;aACF;QACH,CAAC;QA4FH,yBAAC;IAAD,CAAC,AApPD,CAAkF,yBAAa,GAoP9F;IApPY,gDAAkB","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  KeyCodes,\r\n  css,\r\n  createRef\r\n} from '../../Utilities';\r\nimport {\r\n  FocusZone,\r\n  FocusZoneDirection\r\n} from '../../FocusZone';\r\nimport { Autofill } from '../../Autofill';\r\nimport { IPickerItemProps, IInputProps } from '../../Pickers';\r\nimport * as stylesImport from './BaseExtendedPicker.scss';\r\nimport { IBaseExtendedPickerProps, IBaseExtendedPicker } from './BaseExtendedPicker.types';\r\nimport { IBaseFloatingPickerProps, BaseFloatingPicker } from '../../FloatingPicker';\r\nimport { BaseSelectedItemsList, IBaseSelectedItemsListProps } from '../../SelectedItemsList';\r\nimport { Selection, SelectionMode, SelectionZone } from '../../Selection';\r\n// tslint:disable-next-line:no-any\r\nconst styles: any = stylesImport;\r\n\r\nexport interface IBaseExtendedPickerState {\r\n  // tslint:disable-next-line:no-any\r\n  items?: any;\r\n  suggestedDisplayValue?: string;\r\n  moreSuggestionsAvailable?: boolean;\r\n  isSearching?: boolean;\r\n  isMostRecentlyUsedVisible?: boolean;\r\n  suggestionsVisible?: boolean;\r\n  suggestionsLoading?: boolean;\r\n  isResultsFooterVisible?: boolean;\r\n}\r\n\r\nexport class BaseExtendedPicker<T, P extends IBaseExtendedPickerProps<T>> extends BaseComponent<P, IBaseExtendedPickerState>\r\n  implements IBaseExtendedPicker<T> {\r\n  public floatingPicker = createRef<BaseFloatingPicker<T, IBaseFloatingPickerProps<T>>>();\r\n  public selectedItemsList = createRef<BaseSelectedItemsList<T, IBaseSelectedItemsListProps<T>>>();\r\n\r\n  protected root = createRef<HTMLDivElement>();\r\n  protected input = createRef<Autofill>();\r\n  protected focusZone = createRef<FocusZone>();\r\n  protected selection: Selection;\r\n  protected floatingPickerProps: IBaseFloatingPickerProps<T>;\r\n  protected selectedItemsListProps: IBaseSelectedItemsListProps<T>;\r\n\r\n  constructor(basePickerProps: P) {\r\n    super(basePickerProps);\r\n\r\n    const items: T[] = basePickerProps.selectedItems || basePickerProps.defaultSelectedItems || [];\r\n\r\n    this.selection = new Selection({ onSelectionChanged: () => this.onSelectionChange() });\r\n    this.selection.setItems(items);\r\n\r\n    this.state = {\r\n      items: items ? items : [],\r\n      suggestedDisplayValue: '',\r\n    };\r\n\r\n    this.floatingPickerProps = this.props.floatingPickerProps;\r\n    this.selectedItemsListProps = this.props.selectedItemsListProps;\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  public get items(): any {\r\n    return this.selectedItemsList.current ? this.selectedItemsList.current.items : [];\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this.forceUpdate();\r\n  }\r\n\r\n  public focus(): void {\r\n    if (this.focusZone.current) {\r\n      this.focusZone.current.focus();\r\n    }\r\n  }\r\n\r\n  public clearInput(): void {\r\n    if (this.input.current) {\r\n      this.input.current.clear();\r\n    }\r\n  }\r\n\r\n  public get inputElement(): HTMLInputElement | null {\r\n    return this.input.current && this.input.current.inputElement;\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { suggestedDisplayValue } = this.state;\r\n    const {\r\n      className,\r\n      inputProps,\r\n      disabled\r\n    } = this.props;\r\n\r\n    return (\r\n      <div\r\n        ref={ this.root }\r\n        className={ css(\r\n          'ms-BasePicker',\r\n          className ? className : '') }\r\n      >\r\n        <FocusZone\r\n          componentRef={ this.focusZone }\r\n          direction={ FocusZoneDirection.bidirectional }\r\n          isInnerZoneKeystroke={ this._isFocusZoneInnerKeystroke }\r\n          onKeyDown={ this.onBackspace }\r\n          onCopy={ this.onCopy }\r\n        >\r\n          <SelectionZone selection={ this.selection } selectionMode={ SelectionMode.multiple }>\r\n            <div className={ css('ms-BasePicker-text', styles.pickerText) } role={ 'list' }>\r\n              { this.props.headerComponent }\r\n              { this.renderSelectedItemsList() }\r\n              { this.canAddItems() && (<Autofill\r\n                { ...inputProps as IInputProps }\r\n                className={ css('ms-BasePicker-input', styles.pickerInput) }\r\n                ref={ this.input }\r\n                onFocus={ this.onInputFocus }\r\n                onInputValueChange={ this.onInputChange }\r\n                suggestedDisplayValue={ suggestedDisplayValue }\r\n                aria-activedescendant={ 'sug-' + this.state.items.length }\r\n                aria-owns='suggestion-list'\r\n                aria-expanded='true'\r\n                aria-haspopup='true'\r\n                autoCapitalize='off'\r\n                autoComplete='off'\r\n                role='combobox'\r\n                disabled={ disabled }\r\n                aria-controls='selected-suggestion-alert'\r\n                onPaste={ this.onPaste }\r\n              />) }\r\n            </div>\r\n          </SelectionZone>\r\n        </FocusZone>\r\n        { this.renderSuggestions() }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  protected onSelectionChange = (): void => {\r\n    this.forceUpdate();\r\n  }\r\n\r\n  protected canAddItems(): boolean {\r\n    const { items } = this.state;\r\n    const { itemLimit } = this.props;\r\n    return itemLimit === undefined || items.length < itemLimit;\r\n  }\r\n\r\n  protected renderSuggestions(): JSX.Element {\r\n    const onRenderFloatingPicker = this.props.onRenderFloatingPicker;\r\n    return (onRenderFloatingPicker({\r\n      componentRef: this.floatingPicker,\r\n      onChange: this._onSuggestionSelected,\r\n      inputElement: this.input.current ? this.input.current.inputElement : undefined,\r\n      selectedItems: this.selectedItemsList.current ? this.selectedItemsList.current.items : [],\r\n      ...this.floatingPickerProps\r\n    }));\r\n  }\r\n\r\n  protected renderSelectedItemsList(): JSX.Element {\r\n    const onRenderSelectedItems = this.props.onRenderSelectedItems;\r\n    return (onRenderSelectedItems({\r\n      componentRef: this.selectedItemsList,\r\n      ...this.selectedItemsListProps\r\n    }));\r\n  }\r\n\r\n  protected resetFocus(index?: number): void {\r\n    const { items } = this.state;\r\n\r\n    if (items.length && index! >= 0 && this.root.current) {\r\n      const newEl: HTMLElement = this.root.current\r\n        .querySelectorAll('[data-selection-index]')[Math.min(index!, items.length - 1)] as HTMLElement;\r\n      if (newEl && this.focusZone.current) {\r\n        this.focusZone.current.focusElement(newEl);\r\n      }\r\n    } else if (!this.canAddItems()) {\r\n      (items[items.length - 1] as IPickerItemProps<T>).selected = true;\r\n      this.resetFocus(items.length - 1);\r\n    } else {\r\n      if (this.input.current) {\r\n        this.input.current.focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  protected onInputChange = (value: string): void => {\r\n    if (this.floatingPicker.current) {\r\n      this.floatingPicker.current.onQueryStringChanged(value);\r\n    }\r\n  }\r\n\r\n  protected onInputFocus = (ev: React.FocusEvent<HTMLInputElement | Autofill>): void => {\r\n    if (this.selectedItemsList.current) {\r\n      this.selectedItemsList.current.unselectAll();\r\n    }\r\n\r\n    if (this.floatingPicker.current) {\r\n      this.floatingPicker.current.showPicker(true /*updateValue*/);\r\n    }\r\n\r\n    if (this.props.inputProps && this.props.inputProps.onFocus) {\r\n      this.props.inputProps.onFocus(ev as React.FocusEvent<HTMLInputElement>);\r\n    }\r\n  }\r\n\r\n  // This is protected because we may expect the backspace key to work differently in a different kind of picker.\r\n  // This lets the subclass override it and provide it's own onBackspace. For an example see the BasePickerListBelow\r\n  protected onBackspace = (ev: React.KeyboardEvent<HTMLElement>): void => {\r\n    if (ev.which !== KeyCodes.backspace) {\r\n      return;\r\n    }\r\n    if ((this.state.items.length && !this.input.current) || (this.input.current && !this.input.current.isValueSelected)) {\r\n      if (this.selectedItemsList.current && (this.input.current as Autofill).cursorLocation === 0) {\r\n        this.selectedItemsList.current.removeItemAt(this.items.length - 1);\r\n        this._onSelectedItemsChanged();\r\n      }\r\n    }\r\n  }\r\n\r\n  protected onCopy = (ev: React.ClipboardEvent<HTMLElement>): void => {\r\n    if (this.selectedItemsList.current) {\r\n      // Pass it down into the selected items list\r\n      this.selectedItemsList.current.onCopy(ev);\r\n    }\r\n  }\r\n\r\n  protected onPaste = (ev: React.ClipboardEvent<Autofill | HTMLInputElement>): void => {\r\n    if (this.props.onPaste) {\r\n      const inputText = ev.clipboardData.getData('Text');\r\n      ev.preventDefault();\r\n      this.props.onPaste(inputText);\r\n    }\r\n  }\r\n\r\n  protected _isFocusZoneInnerKeystroke = (ev: React.KeyboardEvent<HTMLElement>): boolean => {\r\n    // If suggestions are shown let up/down keys control them, otherwise allow them through to control the focusZone.\r\n    if (this.floatingPicker.current && this.floatingPicker.current.isSuggestionsShown) {\r\n      switch (ev.which) {\r\n        case KeyCodes.up:\r\n        case KeyCodes.down:\r\n        case KeyCodes.enter:\r\n          return true;\r\n      }\r\n    }\r\n\r\n    if (ev.ctrlKey) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  protected _onSuggestionSelected = (item: T): void => {\r\n    if (this.selectedItemsList.current) {\r\n      this.selectedItemsList.current.addItems([item]);\r\n    }\r\n\r\n    if (this.props.onItemSelected) {\r\n      this.props.onItemSelected(item);\r\n    }\r\n\r\n    if (this.input.current) {\r\n      this.input.current.clear();\r\n    }\r\n\r\n    if (this.floatingPicker.current) {\r\n      this.floatingPicker.current.hidePicker();\r\n    }\r\n\r\n    this.focus();\r\n  }\r\n\r\n  protected _onSelectedItemsChanged = (): void => {\r\n    this.focus();\r\n  }\r\n}"]}