{"version":3,"file":"DetailsHeader.js","sourceRoot":"../src/","sources":["components/DetailsList/DetailsHeader.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport {\r\n  BaseComponent,\r\n  css,\r\n  getRTL,\r\n  getId,\r\n  KeyCodes,\r\n  IRenderFunction,\r\n  createRef\r\n} from '../../Utilities';\r\nimport { IColumn, DetailsListLayoutMode, ColumnActionsMode } from './DetailsList.types';\r\nimport { IFocusZone, FocusZone, FocusZoneDirection } from '../../FocusZone';\r\nimport { Icon } from '../../Icon';\r\nimport { Layer } from '../../Layer';\r\nimport { GroupSpacer } from '../GroupedList/GroupSpacer';\r\nimport { CollapseAllVisibility } from '../../GroupedList';\r\nimport { DetailsRowCheck } from './DetailsRowCheck';\r\nimport { ITooltipHostProps } from '../../Tooltip';\r\nimport * as checkStylesModule from './DetailsRowCheck.scss';\r\nimport { ISelection, SelectionMode, SELECTION_CHANGE } from '../../utilities/selection/interfaces';\r\nimport * as stylesImport from './DetailsHeader.scss';\r\nconst styles: any = stylesImport;\r\nconst checkStyles: any = checkStylesModule;\r\n\r\nconst MOUSEDOWN_PRIMARY_BUTTON = 0; // for mouse down event we are using ev.button property, 0 means left button\r\nconst MOUSEMOVE_PRIMARY_BUTTON = 1; // for mouse move event we are using ev.buttons property, 1 means left button\r\nconst INNER_PADDING = 16;\r\nconst ISPADDED_WIDTH = 24;\r\n\r\nexport interface IDetailsHeader {\r\n  focus: () => boolean;\r\n}\r\n\r\nexport interface IDetailsHeaderProps extends React.Props<DetailsHeader> {\r\n  componentRef?: (component: IDetailsHeader | null) => void;\r\n  columns: IColumn[];\r\n  selection: ISelection;\r\n  selectionMode: SelectionMode;\r\n  layoutMode: DetailsListLayoutMode;\r\n  onColumnIsSizingChanged?: (column: IColumn, isSizing: boolean) => void;\r\n  onColumnResized?: (column: IColumn, newWidth: number, columnIndex: number) => void;\r\n  onColumnAutoResized?: (column: IColumn, columnIndex: number) => void;\r\n  onColumnClick?: (ev: React.MouseEvent<HTMLElement>, column: IColumn) => void;\r\n  onColumnContextMenu?: (column: IColumn, ev: React.MouseEvent<HTMLElement>) => void;\r\n  onRenderColumnHeaderTooltip?: IRenderFunction<ITooltipHostProps>;\r\n  groupNestingDepth?: number;\r\n  collapseAllVisibility?: CollapseAllVisibility;\r\n  isAllCollapsed?: boolean;\r\n  onToggleCollapseAll?: (isAllCollapsed: boolean) => void;\r\n  /** ariaLabel for the entire header */\r\n  ariaLabel?: string;\r\n  /** ariaLabel for the header checkbox that selects or deselects everything */\r\n  ariaLabelForSelectAllCheckbox?: string;\r\n  ariaLabelForSelectionColumn?: string;\r\n  selectAllVisibility?: SelectAllVisibility;\r\n}\r\n\r\nexport enum SelectAllVisibility {\r\n  none = 0,\r\n  hidden = 1,\r\n  visible = 2\r\n}\r\n\r\nexport interface IDetailsHeaderState {\r\n  columnResizeDetails?: IColumnResizeDetails;\r\n  isAllSelected?: boolean;\r\n  isSizing?: boolean;\r\n  groupNestingDepth?: number;\r\n  isAllCollapsed?: boolean;\r\n}\r\n\r\nexport interface IColumnResizeDetails {\r\n  columnIndex: number;\r\n  originX?: number;\r\n  columnMinWidth: number;\r\n}\r\n\r\nexport class DetailsHeader extends BaseComponent<IDetailsHeaderProps, IDetailsHeaderState> implements IDetailsHeader {\r\n  public static defaultProps = {\r\n    selectAllVisibility: SelectAllVisibility.visible,\r\n    collapseAllVisibility: CollapseAllVisibility.visible\r\n  };\r\n\r\n  private _root = createRef<IFocusZone>();\r\n\r\n  private _id: string;\r\n\r\n  constructor(props: IDetailsHeaderProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      columnResizeDetails: undefined,\r\n      groupNestingDepth: this.props.groupNestingDepth,\r\n      isAllCollapsed: this.props.isAllCollapsed\r\n    };\r\n\r\n    this._onToggleCollapseAll = this._onToggleCollapseAll.bind(this);\r\n    this._onSelectAllClicked = this._onSelectAllClicked.bind(this);\r\n    this._id = getId('header');\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    const { selection } = this.props;\r\n    const focusZone = this._root.current;\r\n    const rootElement = findDOMNode(focusZone as any);\r\n\r\n    this._events.on(selection, SELECTION_CHANGE, this._onSelectionChanged);\r\n\r\n    // We need to use native on this to avoid MarqueeSelection from handling the event before us.\r\n    this._events.on(rootElement, 'mousedown', this._onRootMouseDown);\r\n\r\n    this._events.on(rootElement, 'keydown', this._onRootKeyDown);\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: IDetailsHeaderProps): void {\r\n    const { groupNestingDepth } = this.state;\r\n\r\n    if (newProps.groupNestingDepth !== groupNestingDepth) {\r\n      this.setState({ groupNestingDepth: newProps.groupNestingDepth });\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { columns, ariaLabel, ariaLabelForSelectAllCheckbox, selectAllVisibility, ariaLabelForSelectionColumn } = this.props;\r\n    const { isAllSelected, columnResizeDetails, isSizing, groupNestingDepth, isAllCollapsed } = this.state;\r\n\r\n    const showCheckbox = selectAllVisibility !== SelectAllVisibility.none;\r\n\r\n    const {\r\n      onRenderColumnHeaderTooltip = this._onRenderColumnHeaderTooltip\r\n    } = this.props;\r\n\r\n    return (\r\n      <FocusZone\r\n        role='row'\r\n        aria-label={ ariaLabel }\r\n        className={ css(\r\n          'ms-DetailsHeader',\r\n          styles.root,\r\n          isAllSelected && ('is-allSelected ' + styles.rootIsAllSelected),\r\n          (selectAllVisibility === SelectAllVisibility.hidden) && ('is-selectAllHidden ' + styles.rootIsSelectAllHidden),\r\n          (!!columnResizeDetails && isSizing) && 'is-resizingColumn'\r\n        ) }\r\n        componentRef={ this._root }\r\n        onMouseMove={ this._onRootMouseMove }\r\n        data-automationid='DetailsHeader'\r\n        direction={ FocusZoneDirection.horizontal }\r\n      >\r\n        { showCheckbox ? (\r\n          [\r\n            <div\r\n              key='__checkbox'\r\n              className={ css(\r\n                'ms-DetailsHeader-cell',\r\n                'ms-DetailsHeader-cellIsCheck',\r\n                styles.cell,\r\n                styles.cellIsCheck,\r\n                checkStyles.owner,\r\n                isAllSelected && checkStyles.isSelected\r\n              ) }\r\n              aria-labelledby={ `${this._id}-check` }\r\n              onClick={ this._onSelectAllClicked }\r\n              aria-colindex={ 0 }\r\n              role='columnheader'\r\n            >\r\n              {\r\n                onRenderColumnHeaderTooltip({\r\n                  hostClassName: css(styles.checkTooltip),\r\n                  id: `${this._id}-checkTooltip`,\r\n                  setAriaDescribedBy: false,\r\n                  content: ariaLabelForSelectAllCheckbox,\r\n                  children: (\r\n                    <DetailsRowCheck\r\n                      id={ `${this._id}-check` }\r\n                      aria-label={ ariaLabelForSelectionColumn }\r\n                      aria-describedby={ `${this._id}-checkTooltip` }\r\n                      data-is-focusable={ true }\r\n                      isHeader={ true }\r\n                      selected={ isAllSelected }\r\n                      anySelected={ false }\r\n                      canSelect={ true }\r\n                    />\r\n                  )\r\n                }, this._onRenderColumnHeaderTooltip)\r\n              }\r\n            </div>,\r\n            ariaLabelForSelectAllCheckbox && !this.props.onRenderColumnHeaderTooltip ? (\r\n              <label\r\n                key='__checkboxLabel'\r\n                id={ `${this._id}-checkTooltip` }\r\n                className={ styles.accessibleLabel }\r\n              >\r\n                { ariaLabelForSelectAllCheckbox }\r\n              </label>\r\n            ) : null\r\n          ]\r\n        ) : null\r\n        }\r\n        {\r\n          groupNestingDepth! > 0 && this.props.collapseAllVisibility === CollapseAllVisibility.visible ? (\r\n            <div\r\n              className={ css('ms-DetailsHeader-cell', styles.cell) }\r\n              onClick={ this._onToggleCollapseAll }\r\n              data-is-focusable={ true }\r\n            >\r\n              <Icon\r\n                className={ css(\r\n                  'ms-DetailsHeader-collapseButton',\r\n                  styles.collapseButton,\r\n                  isAllCollapsed && ('is-collapsed ' + styles.collapseButtonIsCollapsed)\r\n                ) }\r\n                iconName='ChevronDown'\r\n              />\r\n            </div>\r\n          ) : (null)\r\n        }\r\n        { GroupSpacer({ count: groupNestingDepth! - 1 }) }\r\n        {\r\n          columns.map((column: IColumn, columnIndex: number) => {\r\n            return (\r\n              [\r\n                <div\r\n                  key={ column.key }\r\n                  role='columnheader'\r\n                  aria-sort={ column.isSorted ? (column.isSortedDescending ? 'descending' : 'ascending') : 'none' }\r\n                  aria-disabled={ column.columnActionsMode === ColumnActionsMode.disabled }\r\n                  aria-colindex={ (showCheckbox ? 1 : 0) + columnIndex }\r\n                  className={ css(\r\n                    'ms-DetailsHeader-cell',\r\n                    styles.cell,\r\n                    column.headerClassName,\r\n                    (column.columnActionsMode !== ColumnActionsMode.disabled) && ('is-actionable ' + styles.cellIsActionable),\r\n                    !column.name && ('is-empty ' + styles.cellIsEmpty),\r\n                    (column.isSorted || column.isGrouped || column.isFiltered) && 'is-icon-visible',\r\n                    column.isPadded && styles.cellWrapperPadded\r\n                  ) }\r\n                  style={ { width: column.calculatedWidth! + INNER_PADDING + (column.isPadded ? ISPADDED_WIDTH : 0) } }\r\n                  data-automationid='ColumnsHeaderColumn'\r\n                  data-item-key={ column.key }\r\n                >\r\n                  {\r\n                    onRenderColumnHeaderTooltip({\r\n                      hostClassName: css(styles.cellTooltip),\r\n                      id: `${this._id}-${column.key}-tooltip`,\r\n                      setAriaDescribedBy: false,\r\n                      content: column.columnActionsMode !== ColumnActionsMode.disabled ? column.ariaLabel : '',\r\n                      children: (\r\n                        <span\r\n                          id={ `${this._id}-${column.key}` }\r\n                          aria-label={ column.isIconOnly ? column.name : undefined }\r\n                          aria-labelledby={ column.isIconOnly ? undefined : `${this._id}-${column.key}-name ` }\r\n                          className={ css('ms-DetailsHeader-cellTitle', styles.cellTitle) }\r\n                          data-is-focusable={ column.columnActionsMode !== ColumnActionsMode.disabled }\r\n                          role={ column.columnActionsMode !== ColumnActionsMode.disabled ? 'button' : undefined }\r\n                          aria-describedby={ this.props.onRenderColumnHeaderTooltip ? `${this._id}-${column.key}-tooltip` : undefined }\r\n                          onContextMenu={ this._onColumnContextMenu.bind(this, column) }\r\n                          onClick={ this._onColumnClick.bind(this, column) }\r\n                          aria-haspopup={ column.columnActionsMode === ColumnActionsMode.hasDropdown }\r\n                        >\r\n                          <span\r\n                            id={ `${this._id}-${column.key}-name` }\r\n                            className={ css('ms-DetailsHeader-cellName',\r\n                              styles.cellName, {\r\n                                [styles.iconOnlyHeader]: column.isIconOnly\r\n                              }) }\r\n                          >\r\n                            { (column.iconName || column.iconClassName) && (\r\n                              <Icon className={ css(styles.nearIcon, column.iconClassName) } iconName={ column.iconName } />\r\n                            ) }\r\n\r\n                            { !column.isIconOnly ? column.name : undefined }\r\n                          </span>\r\n\r\n                          { column.isFiltered && (\r\n                            <Icon className={ styles.nearIcon } iconName='Filter' />\r\n                          ) }\r\n\r\n                          { column.isSorted && (\r\n                            <Icon className={ css(styles.nearIcon, styles.sortIcon) } iconName={ column.isSortedDescending ? 'SortDown' : 'SortUp' } />\r\n                          ) }\r\n\r\n                          { column.isGrouped && (\r\n                            <Icon className={ styles.nearIcon } iconName='GroupedDescending' />\r\n                          ) }\r\n\r\n                          { column.columnActionsMode === ColumnActionsMode.hasDropdown && !column.isIconOnly && (\r\n                            <Icon\r\n                              className={ css('ms-DetailsHeader-filterChevron', styles.filterChevron) }\r\n                              iconName='ChevronDown'\r\n                            />\r\n                          ) }\r\n                        </span>\r\n                      )\r\n                    }, this._onRenderColumnHeaderTooltip)\r\n                  }\r\n                </div>,\r\n                column.ariaLabel && !this.props.onRenderColumnHeaderTooltip ? (\r\n                  <label\r\n                    key={ `${column.key}_label` }\r\n                    id={ `${this._id}-${column.key}-tooltip` }\r\n                    className={ styles.accessibleLabel }\r\n                  >\r\n                    { column.ariaLabel }\r\n                  </label>\r\n                ) : null,\r\n                (column.isResizable) && this._renderColumnSizer(columnIndex)\r\n              ]\r\n            );\r\n          })\r\n        }\r\n        {\r\n          isSizing && (\r\n            <Layer>\r\n              <div\r\n                className={ css(isSizing && styles.sizingOverlay) }\r\n                onMouseMove={ this._onSizerMouseMove }\r\n                onMouseUp={ this._onSizerMouseUp }\r\n              />\r\n            </Layer>\r\n          )\r\n        }\r\n      </FocusZone>\r\n    );\r\n  }\r\n\r\n  /** Set focus to the active thing in the focus area. */\r\n  public focus(): boolean {\r\n    return Boolean(this._root.current && this._root.current.focus());\r\n  }\r\n\r\n  private _renderColumnSizer(columnIndex: number): JSX.Element {\r\n    const { columns } = this.props;\r\n    const column = this.props.columns[columnIndex];\r\n    const { columnResizeDetails } = this.state;\r\n\r\n    return (\r\n      <div\r\n        key={ `${column.key}_sizer` }\r\n        aria-hidden={ true }\r\n        role='button'\r\n        data-is-focusable={ false }\r\n        onClick={ stopPropagation }\r\n        data-sizer-index={ columnIndex }\r\n        onBlur={ this._onSizerBlur }\r\n        className={ css(\r\n          'ms-DetailsHeader-cellSizer',\r\n          styles.cellSizer,\r\n          columnIndex < columns.length - 1 ? styles.cellSizerStart : styles.cellSizerEnd,\r\n          {\r\n            ['is-resizing ' + styles.cellIsResizing]: columnResizeDetails && columnResizeDetails.columnIndex === columnIndex\r\n          }) }\r\n        onDoubleClick={ this._onSizerDoubleClick.bind(this, columnIndex) }\r\n      />\r\n    );\r\n  }\r\n\r\n  private _onRenderColumnHeaderTooltip = (tooltipHostProps: ITooltipHostProps, defaultRender?: IRenderFunction<ITooltipHostProps>): JSX.Element => {\r\n    return (\r\n      <span className={ tooltipHostProps.hostClassName }>\r\n        { tooltipHostProps.children }\r\n      </span >\r\n    );\r\n  }\r\n\r\n  /**\r\n   * double click on the column sizer will auto ajust column width\r\n   * to fit the longest content among current rendered rows.\r\n   *\r\n   * @private\r\n   * @param {number} columnIndex (index of the column user double clicked)\r\n   * @param {React.MouseEvent} ev (mouse double click event)\r\n   */\r\n  private _onSizerDoubleClick(columnIndex: number, ev: React.MouseEvent<HTMLElement>): void {\r\n    const { onColumnAutoResized, columns } = this.props;\r\n    if (onColumnAutoResized) {\r\n      onColumnAutoResized(columns[columnIndex], columnIndex);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the select all toggle is clicked.\r\n   */\r\n  private _onSelectAllClicked = (): void => {\r\n    const { selection } = this.props;\r\n\r\n    selection.toggleAllSelected();\r\n  }\r\n\r\n  private _onRootMouseDown = (ev: MouseEvent): void => {\r\n    const columnIndexAttr = (ev.target as HTMLElement).getAttribute('data-sizer-index');\r\n    const columnIndex = Number(columnIndexAttr);\r\n    const { columns } = this.props;\r\n\r\n    if (columnIndexAttr === null || ev.button !== MOUSEDOWN_PRIMARY_BUTTON) {\r\n      // Ignore anything except the primary button.\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      columnResizeDetails: {\r\n        columnIndex: columnIndex,\r\n        columnMinWidth: columns[columnIndex].calculatedWidth!,\r\n        originX: ev.clientX\r\n      }\r\n    });\r\n\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  private _onRootMouseMove = (ev: React.MouseEvent<HTMLElement>): void => {\r\n    const { columnResizeDetails, isSizing } = this.state;\r\n\r\n    if (columnResizeDetails && !isSizing && ev.clientX !== columnResizeDetails.originX) {\r\n      this.setState({ isSizing: true });\r\n    }\r\n  }\r\n\r\n  private _onRootKeyDown = (ev: KeyboardEvent): void => {\r\n    const { columnResizeDetails, isSizing } = this.state;\r\n    const { columns, onColumnResized } = this.props;\r\n\r\n    const columnIndexAttr = (ev.target as HTMLElement).getAttribute('data-sizer-index');\r\n\r\n    if (!columnIndexAttr || isSizing) {\r\n      return;\r\n    }\r\n\r\n    const columnIndex = Number(columnIndexAttr);\r\n\r\n    if (!columnResizeDetails) {\r\n      if (ev.which === KeyCodes.enter) {\r\n        this.setState({\r\n          columnResizeDetails: {\r\n            columnIndex: columnIndex,\r\n            columnMinWidth: columns[columnIndex].calculatedWidth!\r\n          }\r\n        });\r\n\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n      }\r\n    } else {\r\n      let increment: number | undefined;\r\n\r\n      if (ev.which === KeyCodes.enter) {\r\n        this.setState({\r\n          columnResizeDetails: undefined\r\n        });\r\n\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n      } else if (ev.which === KeyCodes.left) {\r\n        increment = getRTL() ? 1 : -1;\r\n      } else if (ev.which === KeyCodes.right) {\r\n        increment = getRTL() ? -1 : 1;\r\n      }\r\n\r\n      if (increment) {\r\n        if (!ev.shiftKey) {\r\n          increment *= 10;\r\n        }\r\n\r\n        this.setState({\r\n          columnResizeDetails: {\r\n            ...columnResizeDetails,\r\n            columnMinWidth: columnResizeDetails.columnMinWidth + increment\r\n          }\r\n        });\r\n\r\n        if (onColumnResized) {\r\n          onColumnResized(columns[columnIndex], columnResizeDetails.columnMinWidth + increment, columnIndex);\r\n        }\r\n\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * mouse move event handler in the header\r\n   * it will set isSizing state to true when user clicked on the sizer and move the mouse.\r\n   *\r\n   * @private\r\n   * @param {React.MouseEvent} ev (mouse move event)\r\n   */\r\n  private _onSizerMouseMove = (ev: React.MouseEvent<HTMLElement>): void => {\r\n    const {\r\n      // use buttons property here since ev.button in some edge case is not upding well during the move.\r\n      // but firefox doesn't support it, so we set the default value when it is not defined.\r\n      buttons\r\n    } = ev;\r\n    const { onColumnIsSizingChanged, onColumnResized, columns } = this.props;\r\n    const { columnResizeDetails } = this.state;\r\n\r\n    if (buttons !== undefined && buttons !== MOUSEMOVE_PRIMARY_BUTTON) {\r\n      // cancel mouse down event and return early when the primary button is not pressed\r\n      this._onSizerMouseUp(ev);\r\n      return;\r\n    }\r\n\r\n    if (ev.clientX !== columnResizeDetails!.originX) {\r\n      if (onColumnIsSizingChanged) {\r\n        onColumnIsSizingChanged(columns[columnResizeDetails!.columnIndex], true);\r\n      }\r\n    }\r\n\r\n    if (onColumnResized) {\r\n      let movement = ev.clientX - columnResizeDetails!.originX!;\r\n\r\n      if (getRTL()) {\r\n        movement = -movement;\r\n      }\r\n\r\n      onColumnResized(\r\n        columns[columnResizeDetails!.columnIndex],\r\n        columnResizeDetails!.columnMinWidth + movement,\r\n        columnResizeDetails!.columnIndex\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n  private _onSizerBlur = (ev: React.FocusEvent<HTMLElement>): void => {\r\n    const { columnResizeDetails } = this.state;\r\n\r\n    if (columnResizeDetails) {\r\n      this.setState({\r\n        columnResizeDetails: undefined,\r\n        isSizing: false\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * mouse up event handler in the header\r\n   * clear the resize related state.\r\n   * This is to ensure we can catch double click event\r\n   *\r\n   * @private\r\n   * @param {React.MouseEvent} ev (mouse up event)\r\n   */\r\n  private _onSizerMouseUp = (ev: React.MouseEvent<HTMLElement>): void => {\r\n    const { columns, onColumnIsSizingChanged } = this.props;\r\n    const { columnResizeDetails } = this.state;\r\n\r\n    this.setState({\r\n      columnResizeDetails: undefined,\r\n      isSizing: false\r\n    });\r\n\r\n    if (onColumnIsSizingChanged) {\r\n      onColumnIsSizingChanged(columns[columnResizeDetails!.columnIndex], false);\r\n    }\r\n  }\r\n\r\n  private _onSelectionChanged(): void {\r\n    const isAllSelected = this.props.selection.isAllSelected();\r\n\r\n    if (this.state.isAllSelected !== isAllSelected) {\r\n      this.setState({\r\n        isAllSelected: isAllSelected\r\n      });\r\n    }\r\n  }\r\n\r\n  private _onColumnClick(column: IColumn, ev: React.MouseEvent<HTMLElement>): void {\r\n    const { onColumnClick } = this.props;\r\n\r\n    if (column.onColumnClick) {\r\n      column.onColumnClick(ev, column);\r\n    }\r\n\r\n    if (onColumnClick) {\r\n      onColumnClick(ev, column);\r\n    }\r\n  }\r\n\r\n  private _onColumnContextMenu(column: IColumn, ev: React.MouseEvent<HTMLElement>): void {\r\n    const { onColumnContextMenu } = this.props;\r\n\r\n    if (column.onColumnContextMenu) {\r\n      column.onColumnContextMenu(column, ev);\r\n\r\n      ev.preventDefault();\r\n    }\r\n\r\n    if (onColumnContextMenu) {\r\n      onColumnContextMenu(column, ev);\r\n\r\n      ev.preventDefault();\r\n    }\r\n  }\r\n\r\n  private _onToggleCollapseAll(): void {\r\n    const { onToggleCollapseAll } = this.props;\r\n    const newCollapsed = !this.state.isAllCollapsed;\r\n    this.setState({\r\n      isAllCollapsed: newCollapsed\r\n    });\r\n    if (onToggleCollapseAll) {\r\n      onToggleCollapseAll(newCollapsed);\r\n    }\r\n  }\r\n}\r\n\r\nfunction stopPropagation(ev: React.MouseEvent<HTMLElement>): void {\r\n  ev.stopPropagation();\r\n}\r\n"]}