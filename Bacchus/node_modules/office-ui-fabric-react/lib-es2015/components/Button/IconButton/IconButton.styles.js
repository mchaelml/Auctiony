import { concatStyleSets } from '../../../Styling';
import { memoizeFunction } from '../../../Utilities';
import { getStyles as getBaseButtonStyles } from '../BaseButton.styles';
import { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';
export var getStyles = memoizeFunction(function (theme, customStyles) {
    var baseButtonStyles = getBaseButtonStyles(theme);
    var splitButtonStyles = getSplitButtonStyles(theme);
    var palette = theme.palette, semanticColors = theme.semanticColors;
    var iconButtonStyles = {
        root: {
            padding: '0 4px',
            width: '32px',
            height: '32px',
            backgroundColor: 'transparent'
        },
        rootHovered: {
            color: palette.themeDarker,
            backgroundColor: semanticColors.buttonBackground,
        },
        rootPressed: {
            color: palette.themePrimary,
            backgroundColor: semanticColors.buttonBackgroundHovered,
        },
        rootExpanded: {
            color: palette.themePrimary
        },
        rootChecked: {
            backgroundColor: semanticColors.buttonBackgroundChecked,
        },
        rootCheckedHovered: {
            backgroundColor: semanticColors.buttonBackgroundHovered,
        },
        rootDisabled: {
            color: semanticColors.disabledText,
        }
    };
    return concatStyleSets(baseButtonStyles, iconButtonStyles, splitButtonStyles, customStyles);
});
//# sourceMappingURL=IconButton.styles.js.map