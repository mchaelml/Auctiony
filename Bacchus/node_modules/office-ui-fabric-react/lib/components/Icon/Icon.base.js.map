{"version":3,"file":"Icon.base.js","sourceRoot":"../src/","sources":["components/Icon/Icon.base.tsx"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable */\r\nimport * as React from 'react';\r\n/* tslint:enable */\r\nimport { IIconProps, IconType } from './Icon.types';\r\nimport { Image } from '../Image/Image';\r\nimport { ImageLoadState } from '../Image/Image.types';\r\nimport {\r\n  css,\r\n  getNativeProps,\r\n  htmlElementProperties,\r\n  BaseComponent\r\n} from '../../Utilities';\r\nimport { getIcon } from '../../Styling';\r\nimport { getClassNames } from './Icon.classNames';\r\n\r\nexport interface IIconState {\r\n  imageLoadError: boolean;\r\n}\r\n\r\nexport class Icon extends BaseComponent<IIconProps, IIconState> {\r\n  constructor(props: IIconProps) {\r\n    super(props);\r\n    this.state = {\r\n      imageLoadError: false,\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const {\r\n      ariaLabel,\r\n      className,\r\n      styles,\r\n      iconName,\r\n      imageErrorAs,\r\n    } = this.props;\r\n    const classNames = getClassNames(\r\n      styles\r\n    );\r\n\r\n    const containerProps = ariaLabel ? { 'aria-label': ariaLabel, 'data-icon-name': iconName, } : {\r\n      role: 'presentation',\r\n      'aria-hidden': true,\r\n      'data-icon-name': iconName,\r\n    };\r\n\r\n    if (this.props.iconType === IconType.image || this.props.iconType === IconType.Image) {\r\n      const containerClassName = css(\r\n        'ms-Icon-imageContainer',\r\n        classNames.root,\r\n        classNames.imageContainer,\r\n        className\r\n      );\r\n      const { imageLoadError } = this.state;\r\n      const imageProps = { ...this.props.imageProps, onLoadingStateChange: this.onImageLoadingStateChange };\r\n      const ImageType = imageLoadError && imageErrorAs || Image;\r\n      return (\r\n        <div\r\n          { ...containerProps }\r\n          className={\r\n            css(\r\n              containerClassName,\r\n              classNames.root\r\n            ) }\r\n        >\r\n          <ImageType { ...imageProps } />\r\n        </div>\r\n      );\r\n    } else if (typeof iconName === 'string' && iconName.length === 0) {\r\n      return (\r\n        <i\r\n          { ...containerProps }\r\n          { ...getNativeProps(this.props, htmlElementProperties) }\r\n          className={\r\n            css(\r\n              'ms-Icon-placeHolder',\r\n              classNames.rootHasPlaceHolder,\r\n              this.props.className\r\n            ) }\r\n        />\r\n      );\r\n    } else {\r\n      const iconDefinition = getIcon(iconName) || {\r\n        subset: {\r\n          className: undefined\r\n        },\r\n        code: undefined\r\n      };\r\n\r\n      return (\r\n        <i\r\n          { ...containerProps }\r\n          { ...getNativeProps(this.props, htmlElementProperties) }\r\n          className={\r\n            css(\r\n              iconDefinition.subset.className,\r\n              classNames.root,\r\n              this.props.className\r\n            ) }\r\n        >\r\n          { iconDefinition.code }\r\n        </i>\r\n      );\r\n    }\r\n  }\r\n\r\n  private onImageLoadingStateChange = (state: ImageLoadState): void => {\r\n    if (this.props.imageProps && this.props.imageProps.onLoadingStateChange) {\r\n      this.props.imageProps.onLoadingStateChange(state);\r\n    }\r\n    if (state === ImageLoadState.error) {\r\n      this.setState({ imageLoadError: true });\r\n    }\r\n  }\r\n}\r\n"]}