{"version":3,"file":"Coachmark.Basic.Example.js","sourceRoot":"../src/","sources":["components/Coachmark/examples/Coachmark.Basic.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,0CAAyC;AACzC,4EAAkF;AAElF,4DAAkE;AAElE,kEAI8C;AAoB9C;IAA2C,iDAA8C;IAGvF,+BAAmB,KAAS;QAA5B,YACE,kBAAM,KAAK,CAAC,SASb;QAZO,mBAAa,GAAG,qBAAS,EAAkB,CAAC;QAKlD,KAAI,CAAC,kBAAkB,GAAG,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAC7D,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAE3D,KAAI,CAAC,KAAK,GAAG;YACX,SAAS,EAAE,KAAK;YAChB,oBAAoB,EAAE,IAAI;SAC3B,CAAC;;IACJ,CAAC;IAEM,sCAAM,GAAb;QACU,IAAA,gCAAS,CAAgB;QAEjC,IAAM,YAAY,GAAkB;YAClC,UAAU,EAAE,IAAI;SACjB,CAAC;QAEF,IAAM,aAAa,GAAG,8BAAkB,EAAoC,CAAC;QAC7E,IAAM,UAAU,GAAG,aAAa,CAAC;YAC/B,OAAO;gBACL,IAAI,EAAE,EAAE;gBACR,eAAe,EAAE;oBACf,OAAO,EAAE,cAAc;iBACxB;aACF,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,OAAO,CACL,6BAAK,SAAS,EAAG,UAAU,CAAC,IAAI;YAC9B,6BACE,SAAS,EAAG,UAAU,CAAC,eAAe,EACtC,GAAG,EAAG,IAAI,CAAC,aAAa;gBAExB,oBAAC,sBAAa,IACZ,OAAO,EAAG,IAAI,CAAC,kBAAkB,EACjC,IAAI,EAAG,SAAS,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,gBAAgB,GACtD,CACE;YACJ,SAAS,IAAI,CACb,oBAAC,qBAAS,IACR,MAAM,EAAG,IAAI,CAAC,aAAa,CAAC,OAAO;gBAEnC,oBAAC,sCAAqB,IACpB,QAAQ,EAAC,eAAe,EACxB,YAAY,EAAG,YAAY,wCAGL,CACd,CACb,CACG,CACP,CAAC;IACJ,CAAC;IAEO,kDAAkB,GAA1B;QACE,IAAI,CAAC,QAAQ,CAAC;YACZ,SAAS,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS;SACjC,CAAC,CAAC;IACL,CAAC;IAEO,iDAAiB,GAAzB;QACE,IAAI,CAAC,QAAQ,CAAC;YACZ,SAAS,EAAE,KAAK;SACjB,CAAC,CAAC;IACL,CAAC;IACH,4BAAC;AAAD,CAAC,AAtED,CAA2C,yBAAa,GAsEvD;AAtEY,sDAAqB","sourcesContent":["import * as React from 'react';\r\nimport { Coachmark } from '../Coachmark';\r\nimport { TeachingBubbleContent } from 'office-ui-fabric-react/lib/TeachingBubble';\r\nimport { ICalloutProps } from 'office-ui-fabric-react/lib/Callout';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { IStyle } from '../../../Styling';\r\nimport {\r\n  BaseComponent,\r\n  classNamesFunction,\r\n  createRef\r\n} from 'office-ui-fabric-react/lib/Utilities';\r\n\r\nexport interface ICoachmarkBasicExampleState {\r\n  isVisible?: boolean;\r\n  isCoachmarkCollapsed?: boolean;\r\n  targetElement?: HTMLElement;\r\n}\r\n\r\nexport interface ICoachmarkBasicExampleStyles {\r\n  /**\r\n   * Style for the root element in the default enabled/unchecked state.\r\n   */\r\n  root?: IStyle;\r\n\r\n  /**\r\n   * The example button container\r\n   */\r\n  buttonContainer: IStyle;\r\n}\r\n\r\nexport class CoachmarkBasicExample extends BaseComponent<{}, ICoachmarkBasicExampleState> {\r\n  private _targetButton = createRef<HTMLDivElement>();\r\n\r\n  public constructor(props: {}) {\r\n    super(props);\r\n\r\n    this._onShowMenuClicked = this._onShowMenuClicked.bind(this);\r\n    this._onCalloutDismiss = this._onCalloutDismiss.bind(this);\r\n\r\n    this.state = {\r\n      isVisible: false,\r\n      isCoachmarkCollapsed: true\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { isVisible } = this.state;\r\n\r\n    const calloutProps: ICalloutProps = {\r\n      doNotLayer: true\r\n    };\r\n\r\n    const getClassNames = classNamesFunction<{}, ICoachmarkBasicExampleStyles>();\r\n    const classNames = getClassNames(() => {\r\n      return {\r\n        root: {},\r\n        buttonContainer: {\r\n          display: 'inline-block'\r\n        }\r\n      };\r\n    });\r\n\r\n    return (\r\n      <div className={ classNames.root }>\r\n        <div\r\n          className={ classNames.buttonContainer }\r\n          ref={ this._targetButton }\r\n        >\r\n          <DefaultButton\r\n            onClick={ this._onShowMenuClicked }\r\n            text={ isVisible ? 'Hide Coachmark' : 'Show Coachmark' }\r\n          />\r\n        </div>\r\n        { isVisible && (\r\n          <Coachmark\r\n            target={ this._targetButton.current }\r\n          >\r\n            <TeachingBubbleContent\r\n              headline='Example Title'\r\n              calloutProps={ calloutProps }\r\n            >\r\n              Welcome to the land of coachmarks\r\n            </TeachingBubbleContent>\r\n          </Coachmark>\r\n        ) }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onShowMenuClicked(): void {\r\n    this.setState({\r\n      isVisible: !this.state.isVisible\r\n    });\r\n  }\r\n\r\n  private _onCalloutDismiss(): void {\r\n    this.setState({\r\n      isVisible: false\r\n    });\r\n  }\r\n}"]}