{
  "_args": [
    [
      "flow-parser@https://registry.npmjs.org/flow-parser/-/flow-parser-0.76.0.tgz",
      "C:\\Users\\mchae\\Desktop\\Bacchus-master\\Bacchus"
    ]
  ],
  "_from": "flow-parser@https://registry.npmjs.org/flow-parser/-/flow-parser-0.76.0.tgz",
  "_id": "flow-parser@0.76.0",
  "_inCache": true,
  "_location": "/flow-parser",
  "_phantomChildren": {},
  "_requested": {
    "name": "flow-parser",
    "raw": "flow-parser@https://registry.npmjs.org/flow-parser/-/flow-parser-0.76.0.tgz",
    "rawSpec": "https://registry.npmjs.org/flow-parser/-/flow-parser-0.76.0.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/flow-parser/-/flow-parser-0.76.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/jscodeshift",
    "/webpack-addons/jscodeshift"
  ],
  "_resolved": "https://registry.npmjs.org/flow-parser/-/flow-parser-0.76.0.tgz",
  "_shasum": "f7d4c4d26df74805c3a0babd5d8ea4c2cd57190b",
  "_shrinkwrap": null,
  "_spec": "flow-parser@https://registry.npmjs.org/flow-parser/-/flow-parser-0.76.0.tgz",
  "_where": "C:\\Users\\mchae\\Desktop\\Bacchus-master\\Bacchus",
  "author": {
    "email": "flow@fb.com",
    "name": "Flow Team"
  },
  "bugs": {
    "url": "https://github.com/facebook/flow/issues"
  },
  "dependencies": {},
  "description": "JavaScript parser written in OCaml. Produces ESTree AST",
  "devDependencies": {
    "ast-types": "0.8.18",
    "colors": ">=0.6.2",
    "esprima-fb": "15001.1001.0-dev-harmony-fb",
    "minimist": ">=0.2.0"
  },
  "engines": {
    "node": ">=0.4.0"
  },
  "files": [
    "flow_parser.js"
  ],
  "homepage": "https://flow.org",
  "license": "MIT",
  "main": "flow_parser.js",
  "name": "flow-parser",
  "optionalDependencies": {},
  "readme": "# The flow-parser package\n\nThis package contains the Flow parser in its compiled-to-JavaScript form.\n\n# What is Flow\n\nSee [flow.org](https://flow.org/). The code for the Flow parser [lives on GitHub](https://github.com/facebook/flow/tree/master/src/parser).\n\n# What is the Flow Parser\n\nThe Flow Parser is a JavaScript parser written in OCaml. It produces an AST that conforms to the [ESTree spec](https://github.com/estree/estree) and that mostly matches what [esprima](http://esprima.org/) produces. The Flow Parser can be compiled to native code or can be compiled to JavaScript using [js_of_ocaml](http://ocsigen.org/js_of_ocaml/). This npm package contains the Flow parser compiled to JavaScript.\n\n# Usage\n\nYou can use the Flow parser in your browser or in node. To use in node you can just do\n\n```JavaScript\nrequire('flow-parser').parse('1+1', {});\n```\n\nTo use in the browser, you can add\n\n```HTML\n<script src=\"flow_parser.js\"></script>\n```\n\nwhich will make the `flow` object available to use like so:\n\n```JavaScript\nflow.parse('1+1', {});\n```\n\n## Options\n\nThe second argument to `flow.parse` is the options object. Currently supported options:\n\n* `esproposal_decorators` (boolean, default `false`) - enable parsing of decorators\n* `esproposal_class_instance_fields` (boolean, default `false`) - enable parsing of class instance fields\n* `esproposal_class_static_fields` (boolean, default `false`) - enable parsing of class static fields\n* `esproposal_export_star_as` (boolean, default `false`) - enable parsing of `export * as` syntax\n* `esproposal_optional_chaining` (boolean, default `false`) - enable parsing of optional chaining (`?.`)\n* `esproposal_nullish_coalescing` (boolean, default `false`) - enable parsing of nullish coalescing (`??`)\n* `types` (boolean, default `true`) - enable parsing of Flow types\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/facebook/flow.git"
  },
  "scripts": {
    "prepublish": "make js",
    "test": "node test/run_tests.js"
  },
  "version": "0.76.0"
}
